{"version":3,"file":"tree-select.component.js","sourceRoot":"","sources":["tree-select.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { TreeSelectDefaultOptions } from './../model/tree-select-default-options';\r\nimport { Component, forwardRef, Input, OnInit, HostListener } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { SelectableItem } from '../model/selectable-item';\r\nimport { SelectService } from '../service/select.service';\r\nimport { SelectOption } from '../model/SelectOption';\r\nimport { ItemPipe } from '../pipe/item.pipe';\r\n\r\nconst noop = () => {\r\n};\r\n\r\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TreeSelectComponent),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'tree-select',\r\n  templateUrl: './tree-select.component.html',\r\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR, SelectService],\r\n  styleUrls: ['./tree-select.component.css']\r\n})\r\nexport class TreeSelectComponent implements ControlValueAccessor {\r\n  private _isOpen = false;\r\n  public onTouchedCallback: () => void = noop;\r\n  private onChangeCallback: (_: any) => void = noop;\r\n  private haveFocus = false;\r\n  private inputFocus = false;\r\n\r\n  @Input() public disabled = false;\r\n  @Input() public filterPlaceholder = 'Type here for filtering items...';\r\n  @Input() public allowFilter = true;\r\n\r\n  @Input()\r\n  public set items(value: any[]) {\r\n    this.svc.setItems(value);\r\n  }\r\n\r\n  @Input()\r\n  public set idField(value: string) {\r\n    this.svc.setConfiguration(opt => opt.idProperty = value, true);\r\n  }\r\n\r\n  @Input()\r\n  public set textField(value: string) {\r\n    this.svc.setConfiguration(opt => opt.textProperty = value, true);\r\n  }\r\n\r\n  @Input()\r\n  public set onlySelectParent(value: boolean) {\r\n    this.svc.setConfiguration(opt => opt.onlySelectParent = value, true);\r\n  }\r\n\r\n  @Input()\r\n  public set childrenField(value: string) {\r\n    this.svc.setConfiguration(opt => opt.childProperty = value, true);\r\n  }\r\n\r\n  @Input()\r\n  public set multiple(value: boolean) {\r\n    this.svc.setConfiguration(opt => opt.allowMultiple = value, true);\r\n  }\r\n  @Input()\r\n  public set maxVisibleItemCount(value: number) {\r\n    this.svc.setConfiguration(opt => opt.maxVisibleItemCount = value, true);\r\n  }\r\n\r\n  public get multiple(): boolean {\r\n    return this.svc.Configuration.allowMultiple;\r\n  }\r\n\r\n  public get onlySelectParent(): boolean {\r\n    return this.svc.Configuration.onlySelectParent;\r\n  }\r\n  public get maxVisibleItemCount(): number {\r\n    return this.svc.Configuration.maxVisibleItemCount;\r\n  }\r\n\r\n  public get loadAllItems(): boolean {\r\n    return this.svc.Configuration.loadAllItems;\r\n  }\r\n\r\n  public get internalItems(): SelectableItem[] {\r\n    return this.svc.getInternalItems() || [];\r\n  }\r\n\r\n  public get selection(): SelectableItem[] {\r\n    if (this.maxVisibleItemCount && ((this.svc.getInternalSelection().length - this.maxVisibleItemCount) > 0)) {\r\n      this.svc.setConfiguration(opt => opt.loadAllItems = true, false);\r\n    }\r\n    return this.svc.getInternalSelection();\r\n  }\r\n\r\n  public get filter(): string {\r\n    return this.svc.Configuration.filter;\r\n  }\r\n\r\n  public set filter(value: string) {\r\n    this.svc.setConfiguration(opt => opt.filter = value, false);\r\n    for (let item of this.internalItems) {\r\n      this.ProcessMatchFilterTreeItem(item, this.svc.Configuration.filter);\r\n    }\r\n  }\r\n\r\n  public constructor(\r\n    private svc: SelectService,\r\n    private defaultOpts: TreeSelectDefaultOptions\r\n  ) {\r\n    this.clickedOutside = this.clickedOutside.bind(this);\r\n\r\n    this.svc.configurationChanged$.subscribe(options => {\r\n    });\r\n    this.svc.itemsChanged$.subscribe(items => {\r\n      // this.onChangeCallback(this.svc.getSelection());\r\n    });\r\n    this.svc.itemSelectionChanged$.subscribe(items => {\r\n    });\r\n    this.svc.modelChanged$.subscribe(result => {\r\n      this.onChangeCallback(this.svc.getSelection());\r\n    });\r\n    this.maxVisibleItemCount = (defaultOpts.maxVisibleItemCount || 0);\r\n    this.filterPlaceholder = (defaultOpts.filterPlaceholder || 'Type here for filtering items...');\r\n  }\r\n\r\n  keyUp($event: any) { }\r\n\r\n  toggle($event: any) {\r\n    $event.preventDefault();\r\n    this.haveFocus = true;\r\n    this.svc.toggleOpen();\r\n  }\r\n\r\n  public removeItem($event: any, item: SelectableItem): void {\r\n    $event.stopPropagation();\r\n    this.svc.toggleItemSelection(item);\r\n  }\r\n  public get isOpen(): boolean {\r\n    return this.svc.Configuration.isOpen;\r\n  }\r\n\r\n  clickedOutside() {\r\n    if (!this.inputFocus) {\r\n      if (!this.haveFocus && this.isOpen || this.haveFocus && !this.isOpen) {\r\n        this.onTouched();\r\n      }\r\n      this.haveFocus = false;\r\n    }\r\n  }\r\n\r\n  // Set touched on blur\r\n  @HostListener('blur')\r\n  onTouched() {\r\n    this.svc.close();\r\n    this.onTouchedCallback();\r\n  }\r\n\r\n  setInputFocus() {\r\n    this.inputFocus = true;\r\n  }\r\n  setInputFocusOut() {\r\n    this.inputFocus = false;\r\n  }\r\n\r\n  // Placeholders for the callbacks which are later provided by the Control Value Accessor\r\n  writeValue(value: any) {\r\n    this.svc.setSelection(value);\r\n  }\r\n\r\n  registerOnChange(fn: any) {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any) {\r\n    this.onTouchedCallback = fn;\r\n  }\r\n\r\n  loadMore() {\r\n    this.svc.setConfiguration(opt => opt.loadAllItems = false, false);\r\n    this.svc.setConfiguration(opt => opt.maxVisibleItemCount = 0, false);\r\n  }\r\n\r\n  ProcessMatchFilterTreeItem(tree: SelectableItem, filter: string): boolean {\r\n    let result = false;\r\n    if (tree && tree.children && tree.children.length > 0) {\r\n      for (let child of tree.children) {\r\n        result = this.ProcessMatchFilterTreeItem(child, filter) || result;\r\n      }\r\n    }\r\n    tree.matchFilter = (tree.id.indexOf(filter) > -1 || tree.text.indexOf(filter) > -1 || result);\r\n    // console.info(`${tree.id} -> ${tree.text} => ${filter} ==> ${tree.matchFilter}`)\r\n\r\n    return tree.matchFilter;\r\n  }\r\n}\r\n"]}