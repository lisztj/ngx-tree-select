{"version":3,"file":"tree-select-item.component.js","sourceRoot":"","sources":["tree-select-item.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAuE;AACvE,4DAA0D;AAC1D,4DAA0D;AAO1D,IAAa,uBAAuB;IAUlC,iCACU,GAAkB;QAAlB,QAAG,GAAH,GAAG,CAAe;IACxB,CAAC;IAXL,sBAAW,2CAAM;aAAjB;YACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAC1B,CAAC;;;OAAA;IAWD,4CAAU,GAAV,UAAW,MAAW;QACpB,MAAM,CAAC,eAAe,EAAE,CAAC;QACzB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QACvC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC;IACH,CAAC;IAED,sBAAI,qDAAgB;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,gBAAgB,CAAC;QACjD,CAAC;;;OAAA;IAED,sBAAI,iDAAY;aAAhB;YACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC;QACtF,CAAC;;;OAAA;IAED,sBAAW,iDAAY;aAAvB;YACE,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QAC1E,CAAC;;;OAAA;IAEM,wCAAM,GAAb,UAAc,MAAW;QACvB,MAAM,CAAC,eAAe,EAAE,CAAC;QACzB,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC1G,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,CAAC;QACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,sBAAW,2CAAM;aAAjB;YACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC;QACvC,CAAC;;;OAAA;IACH,8BAAC;AAAD,CAAC,AA9CD,IA8CC;AAzCU;IAAR,YAAK,EAAE;;kEAA+B;AAGvC;IADC,YAAK,EAAE;8BACK,gCAAc;qDAAC;AARjB,uBAAuB;IALnC,gBAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,WAAW,EAAE,mCAAmC;QAChD,SAAS,EAAE,CAAC,kCAAkC,CAAC;KAChD,CAAC;qCAYe,8BAAa;GAXjB,uBAAuB,CA8CnC;AA9CY,0DAAuB","sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { SelectableItem } from '../model/selectable-item';\r\nimport { SelectService } from '../service/select.service';\r\n\r\n@Component({\r\n  selector: 'tree-select-item',\r\n  templateUrl: './tree-select-item.component.html',\r\n  styleUrls: ['./tree-select-item.component.css']\r\n})\r\nexport class TreeSelectItemComponent {\r\n  public get isOpen() {\r\n    return this.item.isOpen;\r\n  }\r\n\r\n  @Input() onTouchedCallBack: () => void;\r\n\r\n  @Input()\r\n  public item: SelectableItem;\r\n\r\n  public constructor(\r\n    private svc: SelectService\r\n  ) { }\r\n\r\n  toggleOpen($event: any) {\r\n    $event.stopPropagation();\r\n    if (this.haveChildren) {\r\n      this.item.isOpen = !this.item.isOpen;\r\n    } else {\r\n      this.select($event);\r\n    }\r\n  }\r\n\r\n  get onlySelectParent(): boolean {\r\n    return this.svc.Configuration.onlySelectParent;\r\n  }\r\n\r\n  get needCheckBox(): boolean {\r\n    return this.svc.Configuration.isHierarchy() && this.svc.Configuration.allowMultiple;\r\n  }\r\n\r\n  public get haveChildren(): boolean {\r\n    return this.item && this.item.children && this.item.children.length > 0;\r\n  }\r\n\r\n  public select($event: any): void {\r\n    $event.stopPropagation();\r\n    if (this.svc.Configuration.allowMultiple || !this.haveChildren || this.svc.Configuration.onlySelectParent) {\r\n      this.svc.toggleItemSelection(this.item);\r\n    }\r\n    this.onTouchedCallBack();\r\n  }\r\n\r\n  public get filter(): string {\r\n    return this.svc.Configuration.filter;\r\n  }\r\n}\r\n"]}